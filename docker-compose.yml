#docker compose ile db ve web adında iki tane farklı servis olusmasını sağlar.
#db mysql 5.7 çalıstırıken web uygulamayı çalıstırır.
#bu servisler comman network adında bir ağda çalışacaklar
#web servisi baslamadan önce db servisinin çalısmasını bekleyecek.


version: '3.3'
services: #Servis bölümünde konteynırler tanımlanır.
  db: #db adında servis tanımlanıyor içinde mysql var.
    image: mysql:5.7
    restart: always
    environment: #konteynırın ortam değişkenleri burda belirlenir.
      MYSQL_DATABASE: 'database'

      MYSQL_USER: 'ali'

      MYSQL_PASSWORD: '314159'

      MYSQL_ROOT_PASSWORD: '314159'
    ports: #konteynırın hangi portlarda calısacagı burda belirlenir.
      - '3306:3306'
    expose: #Konteynırın dış dünyaya acılacagı portlar burda belirlenir.
      - '3306'
    networks: #Konteynerlerin hangi ağda yer alacağı belirtilir.
      - common_network
  web: #web adında bir servis tanımlanıyor.
    environment:
      MYSQL_CONNECTION_URL: 'jdbc:mysql://db:3306/student?useSSL=false'  #mysql e bağlanmak için kullanıcak url

    build: .
    ports:
      - '8080:8080'
    networks:
      - common_network
    depends_on: #web servisinin başlamadan önce db yi beklemesi burada olur.
      - db
    command: [ "sleep", "40" ]

networks: #Ağların tanımlandığı bölüm.
  common_network:
    driver: bridge #Ağ tipi bridge yani yani konteynerler aynı ağda olacaklar ve birbirleriyle iletişim kurabilecekler.